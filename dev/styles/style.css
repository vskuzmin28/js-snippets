@import '../styles/fonts.css';
a {
  transition: all 0.5s ease-in-out;
}
body {
  cursor: default;
}
a {
  cursor: pointer;
}
ul {
  -webkit-padding-start: 0px !important;
  -moz-padding-start: 0px !important;
}
.no-margin {
  margin: 0 !important;
  float: none !important;
}
.container {
  margin: 0 auto;
  max-width: 1200px;
}
.container div,
ul {
  margin: 0;
  padding: 10px;
  border-radius: 10px;
}
footer {
  width: 100%;
  background: #0F050C;
  color: #fff;
}
.footer__content {
  display: grid;
  grid-template-columns: 7fr 1fr;
  grid-template-rows: 50px;
  grid-row-gap: 0px;
  grid-column-gap: 10px;
}
.footer__content a,
.footer__content a:hover {
  color: #fff;
}
.footer__links li {
  position: relative;
  padding: 0 20px 0 0;
  display: inline-block;
}
.footer__links li a {
  font: 14px 'open_sansregular';
  text-decoration: none;
}
.footer__links li a:hover {
  text-decoration: underline;
}
.footer__links li:after {
  position: absolute;
  width: 10px;
  height: 20px;
  top: 2px;
  right: 0px;
  display: block;
  content: "/";
}
.footer__socials {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-column-gap: 10px;
}
.footer__socials li {
  display: inline-block;
}
.footer__socials li a,
.footer__socials li a:hover {
  display: block;
  width: 36px;
  height: 36px;
}
.footer__socials li a img,
.footer__socials li a:hover img {
  display: block;
  width: 100%;
  height: auto;
  border-radius: 50%;
}
p.footer__copyright {
  font: 12px 'open_sansregular';
  color: #F4F4FB;
}
/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
